// <auto-generated />
using Exercicios.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Exercicios.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230917202914_initial especies 2")]
    partial class initialespecies2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EspecieRemedio", b =>
                {
                    b.Property<int>("EspeciesEspecieId")
                        .HasColumnType("int");

                    b.Property<int>("RemediosRemedioId")
                        .HasColumnType("int");

                    b.HasKey("EspeciesEspecieId", "RemediosRemedioId");

                    b.HasIndex("RemediosRemedioId");

                    b.ToTable("EspecieRemedio");
                });

            modelBuilder.Entity("Exercicios.Models.Especie", b =>
                {
                    b.Property<int>("EspecieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("EspecieId");

                    b.ToTable("Especiess");
                });

            modelBuilder.Entity("Exercicios.Models.Remedio", b =>
                {
                    b.Property<int>("RemedioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CategoriaFarmacologica")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Contraindicacao")
                        .HasColumnType("longtext");

                    b.Property<string>("Dose")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EfeitosAdversos")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Indicacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("InteracoesFarmacologicas")
                        .HasColumnType("longtext");

                    b.Property<string>("NomeComercial")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PrincipioAtivo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ResumoBasico")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ViaAdministracao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("RemedioId");

                    b.ToTable("Remedioss");
                });

            modelBuilder.Entity("Exercicios.Models.SinalClinico", b =>
                {
                    b.Property<int>("SinalClinicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("RemedioId")
                        .HasColumnType("int");

                    b.Property<string>("Sinal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("SinalClinicoId");

                    b.HasIndex("RemedioId");

                    b.ToTable("SinaisClinicoss");
                });

            modelBuilder.Entity("EspecieRemedio", b =>
                {
                    b.HasOne("Exercicios.Models.Especie", null)
                        .WithMany()
                        .HasForeignKey("EspeciesEspecieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exercicios.Models.Remedio", null)
                        .WithMany()
                        .HasForeignKey("RemediosRemedioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Exercicios.Models.SinalClinico", b =>
                {
                    b.HasOne("Exercicios.Models.Remedio", null)
                        .WithMany("SinaisClinicos")
                        .HasForeignKey("RemedioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Exercicios.Models.Remedio", b =>
                {
                    b.Navigation("SinaisClinicos");
                });
#pragma warning restore 612, 618
        }
    }
}
